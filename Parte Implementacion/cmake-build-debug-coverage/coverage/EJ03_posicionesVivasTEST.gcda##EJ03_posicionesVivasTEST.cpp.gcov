        -:    0:Source:/cygdrive/c/Users/vAsmad/CLionProjects/TPS/TPI_toroide/tests/EJ03_posicionesVivasTEST.cpp
        -:    0:Graph:/cygdrive/c/Users/vAsmad/CLionProjects/TPS/TPI_toroide/cmake-build-debug-coverage/CMakeFiles/juegoDeLaVida.dir/tests/EJ03_posicionesVivasTEST.gcno
        -:    0:Data:/cygdrive/c/Users/vAsmad/CLionProjects/TPS/TPI_toroide/cmake-build-debug-coverage/CMakeFiles/juegoDeLaVida.dir/tests/EJ03_posicionesVivasTEST.gcda
        -:    0:Runs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "../auxiliares.h"
        -:    3:#include "gtest/gtest.h"
        -:    4:#include <algorithm>
        -:    5:#include "../toroidesparaTest.h"
        -:    6:
        -:    7:using namespace std;
        -:    8:
        2:    9:TEST(posicionesVivasTEST, toroideDiagonalVivas){
        -:   10:    toroide t = { 
        -:   11:	{true, false, false},
        -:   12:	{false, true, false},
        -:   13:	{false, false, true},
        -:   14:	{true, false, false},
        -:   15:	{false, true, false},
       10:   16:	{false, false, true}};
        -:   17:
        2:   18:    vector<posicion> vivas = {mp(0,0), mp(1,1), mp(2,2), mp(3, 0), mp(4, 1), mp(5, 2)};
        2:   19:    vector<posicion> res = posicionesVivas(t);
       2*:   20:    EXPECT_EQ(ordenar(vivas), ordenar(res));
        1:   21:}
------------------
_ZN45posicionesVivasTEST_toroideDiagonalVivas_Test8TestBodyEv:
        1:    9:TEST(posicionesVivasTEST, toroideDiagonalVivas){
        -:   10:    toroide t = { 
        -:   11:	{true, false, false},
        -:   12:	{false, true, false},
        -:   13:	{false, false, true},
        -:   14:	{true, false, false},
        -:   15:	{false, true, false},
       10:   16:	{false, false, true}};
        1:   16-block  0
        1:   16-block  1
        1:   16-block  2
        1:   16-block  3
        1:   16-block  4
        1:   16-block  5
        1:   16-block  6
        6:   16-block  7
        1:   16-block  8
    $$$$$:   16-block  9
    $$$$$:   16-block 10
    $$$$$:   16-block 11
    $$$$$:   16-block 12
    $$$$$:   16-block 13
    $$$$$:   16-block 14
    $$$$$:   16-block 15
    $$$$$:   16-block 16
    $$$$$:   16-block 17
    $$$$$:   16-block 18
        -:   17:
        2:   18:    vector<posicion> vivas = {mp(0,0), mp(1,1), mp(2,2), mp(3, 0), mp(4, 1), mp(5, 2)};
        1:   18-block  0
        1:   18-block  1
        1:   18-block  2
        1:   18-block  3
        1:   18-block  4
        1:   18-block  5
    $$$$$:   18-block  6
    $$$$$:   18-block  7
        2:   19:    vector<posicion> res = posicionesVivas(t);
    $$$$$:   19-block  0
       2*:   20:    EXPECT_EQ(ordenar(vivas), ordenar(res));
        1:   20-block  0
        1:   20-block  1
        1:   20-block  2
    %%%%%:   20-block  3
    %%%%%:   20-block  4
    %%%%%:   20-block  5
    %%%%%:   20-block  6
    %%%%%:   20-block  7
        1:   20-block  8
    $$$$$:   20-block  9
    $$$$$:   20-block 10
    $$$$$:   20-block 11
    $$$$$:   20-block 12
    $$$$$:   20-block 13
    $$$$$:   20-block 14
    $$$$$:   20-block 15
        1:   21:}
------------------
_ZN45posicionesVivasTEST_toroideDiagonalVivas_TestC1Ev:
        1:    9:TEST(posicionesVivasTEST, toroideDiagonalVivas){
        1:    9-block  0
------------------
        -:   22:
        2:   23:TEST(posicionesVivasTEST, toroideMuerto){
        2:   24:    toroide t2 = tMuerto;
        -:   25:
        2:   26:    vector<posicion> vivas2 = {};
        2:   27:    vector<posicion> res2 = posicionesVivas(t2);
       2*:   28:    EXPECT_EQ(ordenar(vivas2), ordenar(res2));
        1:   29:}
------------------
_ZN38posicionesVivasTEST_toroideMuerto_Test8TestBodyEv:
        1:   23:TEST(posicionesVivasTEST, toroideMuerto){
        2:   24:    toroide t2 = tMuerto;
        1:   24-block  0
    $$$$$:   24-block  1
        -:   25:
        2:   26:    vector<posicion> vivas2 = {};
        1:   26-block  0
    $$$$$:   26-block  1
        2:   27:    vector<posicion> res2 = posicionesVivas(t2);
    $$$$$:   27-block  0
       2*:   28:    EXPECT_EQ(ordenar(vivas2), ordenar(res2));
        1:   28-block  0
        1:   28-block  1
        1:   28-block  2
    %%%%%:   28-block  3
    %%%%%:   28-block  4
    %%%%%:   28-block  5
    %%%%%:   28-block  6
    %%%%%:   28-block  7
        1:   28-block  8
    $$$$$:   28-block  9
    $$$$$:   28-block 10
    $$$$$:   28-block 11
    $$$$$:   28-block 12
    $$$$$:   28-block 13
    $$$$$:   28-block 14
    $$$$$:   28-block 15
        1:   29:}
------------------
_ZN38posicionesVivasTEST_toroideMuerto_TestC1Ev:
        1:   23:TEST(posicionesVivasTEST, toroideMuerto){
        1:   23-block  0
------------------
        -:   30:
        2:   31:TEST(posicionesVivasTEST, toroideVivo){
        2:   32:    toroide t3 = tVivo;
        -:   33:
        2:   34:    vector<posicion> vivas3 = {mp(0,0), mp(0,1), mp(0,2), mp(1,0), mp(1,1), mp(1,2), mp(2,0), mp(2,1), mp(2,2)};
        2:   35:    vector<posicion> res3 = posicionesVivas(t3);
       2*:   36:    EXPECT_EQ(ordenar(vivas3), ordenar(res3));
        1:   37:}
------------------
_ZN36posicionesVivasTEST_toroideVivo_Test8TestBodyEv:
        1:   31:TEST(posicionesVivasTEST, toroideVivo){
        2:   32:    toroide t3 = tVivo;
        1:   32-block  0
    $$$$$:   32-block  1
        -:   33:
        2:   34:    vector<posicion> vivas3 = {mp(0,0), mp(0,1), mp(0,2), mp(1,0), mp(1,1), mp(1,2), mp(2,0), mp(2,1), mp(2,2)};
        1:   34-block  0
        1:   34-block  1
        1:   34-block  2
        1:   34-block  3
        1:   34-block  4
        1:   34-block  5
        1:   34-block  6
        1:   34-block  7
        1:   34-block  8
        1:   34-block  9
    $$$$$:   34-block 10
    $$$$$:   34-block 11
        2:   35:    vector<posicion> res3 = posicionesVivas(t3);
    $$$$$:   35-block  0
       2*:   36:    EXPECT_EQ(ordenar(vivas3), ordenar(res3));
        1:   36-block  0
        1:   36-block  1
        1:   36-block  2
    %%%%%:   36-block  3
    %%%%%:   36-block  4
    %%%%%:   36-block  5
    %%%%%:   36-block  6
    %%%%%:   36-block  7
        1:   36-block  8
    $$$$$:   36-block  9
    $$$$$:   36-block 10
    $$$$$:   36-block 11
    $$$$$:   36-block 12
    $$$$$:   36-block 13
    $$$$$:   36-block 14
    $$$$$:   36-block 15
        1:   37:}
------------------
_ZN36posicionesVivasTEST_toroideVivo_TestC1Ev:
        1:   31:TEST(posicionesVivasTEST, toroideVivo){
        1:   31-block  0
------------------
        -:   38:
        2:   39:TEST(posicionesVivasTEST, toroideCincoDado){
        2:   40:    toroide t4 = tDadoCinco;
        -:   41:
        2:   42:    vector<posicion> vivas4 = {mp(0,0), mp(0,2), mp(1,1), mp(2, 0), mp(2, 2)};
        2:   43:    vector<posicion> res4 = posicionesVivas(t4);
       2*:   44:    EXPECT_EQ(ordenar(vivas4), ordenar(res4));
        1:   45:}
------------------
_ZN41posicionesVivasTEST_toroideCincoDado_Test8TestBodyEv:
        1:   39:TEST(posicionesVivasTEST, toroideCincoDado){
        2:   40:    toroide t4 = tDadoCinco;
        1:   40-block  0
    $$$$$:   40-block  1
        -:   41:
        2:   42:    vector<posicion> vivas4 = {mp(0,0), mp(0,2), mp(1,1), mp(2, 0), mp(2, 2)};
        1:   42-block  0
        1:   42-block  1
        1:   42-block  2
        1:   42-block  3
        1:   42-block  4
        1:   42-block  5
    $$$$$:   42-block  6
    $$$$$:   42-block  7
        2:   43:    vector<posicion> res4 = posicionesVivas(t4);
    $$$$$:   43-block  0
       2*:   44:    EXPECT_EQ(ordenar(vivas4), ordenar(res4));
        1:   44-block  0
        1:   44-block  1
        1:   44-block  2
    %%%%%:   44-block  3
    %%%%%:   44-block  4
    %%%%%:   44-block  5
    %%%%%:   44-block  6
    %%%%%:   44-block  7
        1:   44-block  8
    $$$$$:   44-block  9
    $$$$$:   44-block 10
    $$$$$:   44-block 11
    $$$$$:   44-block 12
    $$$$$:   44-block 13
    $$$$$:   44-block 14
    $$$$$:   44-block 15
        1:   45:}
------------------
_ZN41posicionesVivasTEST_toroideCincoDado_TestC1Ev:
        1:   39:TEST(posicionesVivasTEST, toroideCincoDado){
        1:   39-block  0
------------------
